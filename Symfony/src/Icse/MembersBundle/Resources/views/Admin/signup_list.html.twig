{% extends 'IcseMembersBundle:Admin:entity_admin_template.html.twig' %}

{% set pageTitle = 'Signups' %}
{% set currentSubSection = 'signuplist' %}

{% set entitySingular = 'person' %}
{% set entityPlural = 'people' %}

{% set readOnly = true %}

{% block extra_entity_main_buttons %}
  <li><button class="listemails" type=button>Email addresses</button></li>
  <li><button onClick="window.print()" class="show_if_none_selected" type=button>Print</button></li>
{% endblock %}

{% block extra_controls %}

<div id="filter_list" class="noprint" >
Show: 
    <a href="" id="all" >All</a>
  | <a href="" id="concertgoers" >Concert-goers</a>
  | <a href="" id="players" >Players</a>
  | <a href="" id="violinists" >Violinists</a>
  | <a href="" id="violists" >Violists</a>
  | <a href="" id="cellists" >Cellists</a>
  | <a href="" id="doublebassists" >Double Bassists</a>
  | <a href="" id="otherplayers" >Other Players</a>
</div>
<div id="sortorder_list" class="noprint">
Sort by:
  <a href="" id="submissiontime" >Submission time</a>
| <a href="" id="name" >Name</a>
</div>

<div>
    <span class="onlyprint"><span id="current_showing_label">All</span>: </span><span id="n_people">0</span> people
</div>

<script>
var postTableReload;

$( document ).ready(function(){

    var all_rows;
    var current_filter = 'all';
    var current_sortorder = 'submissiontime';

    /* Filtering */
    var updateFilters;
    (function(){
        function getInstruments(row) {
            var person = $(row).data('entity');
            var instruments = [];
            if (person.instrument) {
                instruments = person.instrument.toLowerCase().split(', ');
            }
            return instruments;
        }

        var filter_functions = {
            'all': function() {
                return true;
            },
            'concertgoers': function() {
                return $(this).data('entity').player === false;
            },
            'players': function() {
                return $(this).data('entity').player === true;
            },
            'violinists': function() {
                return getInstruments(this).indexOf('violin') >= 0;
            },
            'violists': function() {
                return getInstruments(this).indexOf('viola') >= 0;
            },
            'cellists': function() {
                return getInstruments(this).indexOf('cello') >= 0;
            },
            'doublebassists': function() {
                return getInstruments(this).indexOf('double bass') >= 0;
            },
            'otherplayers': function() {
                var instruments = getInstruments(this);
                for (var i=0; i < instruments.length; i++) {
                    var instr = instruments[i];
                    if (   instr != 'violin'
                        && instr != 'viola'
                        && instr != 'cello'
                        && instr != 'double bass') {
                        return true;
                    }
                }
                return false;
            },
        };

        updateFilters = function(){
            $('button.unselectall').click();

            $('#filter_list a').removeClass('current');
            $('#filter_list a').filter('#' + current_filter).addClass('current');
            $('#current_showing_label').html($('#filter_list a').filter('#' + current_filter).html());

            $('.entity_instance_list .instance').remove();
            filtered = all_rows.filter(filter_functions[current_filter]).clone();
            filtered.appendTo('.entity_instance_list');
            $('#n_people').html(filtered.length);
        };
    })();

    /* Sorting */
    var updateSorting;
    (function(){
        var sorting_functions = {
            'submissiontime': function(a,b) {
                var date_a = new Date(parseInt($(a).data('entity').subscribed_at));
                var date_b = new Date(parseInt($(b).data('entity').subscribed_at));
                return (date_a == date_b)? 0 : (date_a < date_b)? 1 : -1;
            },
            'name': function(a,b) {
                var name_a = $(a).data('entity').last_name.toLowerCase();
                var name_b = $(b).data('entity').last_name.toLowerCase();
                if (name_a == name_b) {
                    name_a = $(a).data('entity').first_name.toLowerCase();
                    name_b = $(b).data('entity').first_name.toLowerCase();
                    if (name_a == name_b) {
                        return 0;
                    }
                }
                return (name_a > name_b)? 1 : -1;
            },
        };

        updateSorting = function(){
            $('#sortorder_list a').removeClass('current');
            $('#sortorder_list a').filter('#' + current_sortorder).addClass('current');

            $('.entity_instance_list .instance').sort(sorting_functions[current_sortorder]).appendTo('.entity_instance_list');
        };
    })();

    postTableReload = function(){
        all_rows = $('.entity_instance_list .instance').clone();
        updateFilters();
        updateSorting();
    }
    postTableReload();

    $('#filter_list a').click(function(){
        current_filter = $(this).attr('id');
        updateFilters();
        updateSorting();
        return false;
    });

    $('#sortorder_list a').click(function(){
        current_sortorder = $(this).attr('id');
        updateSorting();
        return false;
    });

});

</script>
{% endblock extra_controls %}



{% block extra_content %}

<div id="email_list_dialog" title="Email addresses" hidden>
<textarea readonly="readonly" cols=50 rows=20></textarea>
</div>

<script>
    $('#email_list_dialog').dialog({
        autoOpen: false,
        modal: true,
        width: 500,
        minWidth: 500,
        height: 500,
    });

    $('button.listemails').click(function(){
        $('#email_list_dialog').dialog('open');

        var rows = $('.entity_instance_list .instance.ui-selected');
        if (rows.length == 0) rows = $('.entity_instance_list .instance');

        var emails = "";
        rows.each(function(){
            emails += $(this).data('entity').email + '\n';
        });

        $('#email_list_dialog textarea').val(emails).select();
    });

    $('#email_list_dialog textarea').focus(function() { $(this).select(); } );
    $('#email_list_dialog textarea').mouseup(function() { return false; } );
</script>


{% endblock extra_content %}
